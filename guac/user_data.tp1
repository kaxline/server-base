#!/bin/bash
# Add sudo user
sudo_username=${sudo_username}
sudo_password=${sudo_password}

# Add sudo user
adduser --disabled-password --gecos "" ${sudo_username}
echo "${sudo_username}:${sudo_password}" | chpasswd
usermod -aG sudo ${sudo_username}
mkdir -p /home/${sudo_username}/.ssh
cp /root/.ssh/authorized_keys /home/${sudo_username}/.ssh/
chown -R ${sudo_username}:${sudo_username} /home/${sudo_username}/.ssh
chmod 700 /home/${sudo_username}/.ssh
chmod 600 /home/${sudo_username}/.ssh/authorized_keys

# Enable password authentication for SSH
sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
systemctl restart sshd

sudo apt update && sudo apt upgrade -y


# Install Docker
sudo apt install -y docker.io
sudo systemctl start docker
sudo systemctl enable docker

sudo usermod -aG docker ${sudo_username}

# Install Certbot
apt-get update
apt-get install -y certbot

# Install Traefik
docker network create web
docker run -d \
  --name traefik \
  --restart=unless-stopped \
  -p 80:80 \
  -p 443:443 \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v $PWD/traefik.toml:/etc/traefik/traefik.toml \
  traefik

# Setup UFW
apt-get install -y ufw
ufw allow OpenSSH
ufw allow 80
ufw allow 443
ufw allow 2222
ufw --force enable



# Install required dependencies
sudo apt install -y build-essential libcairo2-dev libjpeg-turbo8-dev libpng-dev libtool-bin libossp-uuid-dev \
    libvncserver-dev freerdp2-dev libpango1.0-dev libssh2-1-dev libtelnet-dev libssl-dev libvorbis-dev \
    libwebp-dev libpulse-dev libpcap-dev libfreerdp-client2-2 libwebsockets-dev tomcat9 tomcat9-admin tomcat9-common \
    ghostscript jq wget curl


# Install MySQL server
sudo apt install -y mysql-server

# Secure MySQL installation
sudo mysql_secure_installation


sudo mysql -u root -e "CREATE DATABASE ${guacamole_db};"
sudo mysql -u root -e "CREATE USER '${guacamole_user}'@'localhost' IDENTIFIED BY '${guacamole_password}';"
sudo mysql -u root -e "GRANT SELECT,INSERT,UPDATE,DELETE ON ${guacamole_password}.* TO '${guacamole_user}'@'localhost';"
sudo mysql -u root -e "FLUSH PRIVILEGES;"


# Download Guacamole Server
GUAC_VERSION="1.5.5"
wget https://apache.org/dyn/closer.lua/guacamole/$GUAC_VERSION/source/guacamole-server-$GUAC_VERSION.tar.gz
tar -xzf guacamole-server-$GUAC_VERSION.tar.gz
cd guacamole-server-$GUAC_VERSION

# Build and install Guacamole Server
./configure --with-init-dir=/etc/init.d
make
sudo make install
sudo ldconfig
sudo systemctl enable guacd
sudo systemctl start guacd

# Download and configure Guacamole Client
wget https://apache.org/dyn/closer.lua/guacamole/$GUAC_VERSION/binary/guacamole-$GUAC_VERSION.war -O guacamole.war
sudo mv guacamole.war /var/lib/tomcat9/webapps/

# Download and configure JDBC Authentication extension
wget https://apache.org/dyn/closer.lua/guacamole/$GUAC_VERSION/binary/guacamole-auth-jdbc-$GUAC_VERSION.tar.gz
tar -xzf guacamole-auth-jdbc-$GUAC_VERSION.tar.gz
mkdir -p /etc/guacamole/{extensions,lib}
cp guacamole-auth-jdbc-$GUAC_VERSION/mysql/guacamole-auth-jdbc-mysql-$GUAC_VERSION.jar /etc/guacamole/extensions/
cp guacamole-auth-jdbc-$GUAC_VERSION/mysql/schema/*.sql .

# Apply MySQL schema
sudo mysql -u root -D $DB_NAME < schema/001-create-schema.sql
sudo mysql -u root -D $DB_NAME < schema/002-create-admin-user.sql

# Configure Guacamole properties
echo "mysql-hostname: localhost
mysql-port: 3306
mysql-database: $DB_NAME
mysql-username: $DB_USER
mysql-password: $DB_PASS" | sudo tee /etc/guacamole/guacamole.properties

# Link Guacamole properties
sudo ln -s /etc/guacamole/guacamole.properties /usr/share/tomcat9/.guacamole/
sudo ln -s /etc/guacamole/ /usr/share/tomcat9/.guacamole

# Restart Tomcat service
sudo systemctl restart tomcat9

# Add firewall rule to allow HTTP traffic
sudo ufw allow 8080



# Set up Git configuration with personal access token
sudo -u ${sudo_username} -H sh -c "git config --global credential.helper store"
echo "https://${repo_access_token}:x-oauth-basic@github.com" > /home/${sudo_username}/.git-credentials
chown ${sudo_username}:${sudo_username} /home/${sudo_username}/.git-credentials
chmod 600 /home/${sudo_username}/.git-credentials

# Clone GitHub repo and run docker-compose
sudo -u ${sudo_username} -H sh -c "git clone ${repo_url} /home/${sudo_username}/${dir_name}"
cd /home/${sudo_username}/${dir_name}

mkdir -p app_data
touch app_data/.env
echo "STORAGE_LOCATION=/home/${sudo_username}/${dir_name}" >> app_data/.env

# Obtain SSL certificate using Certbot
sudo certbot certonly --standalone --non-interactive --agree-tos --email ${letsencrypt_email} -d ${domain_name}

# Create Traefik configuration
sudo -u ${sudo_username} -H sh -c 'cat <<EOF > /home/'"${sudo_username}"'/'"${dir_name}"'/traefik.toml
[entryPoints]
  [entryPoints.web]
    address = ":80"
    [entryPoints.web.http.redirections.entryPoint]
      to = "websecure"
      scheme = "https"

  [entryPoints.websecure]
    address = ":443"

[certificatesResolvers]
  [certificatesResolvers.letsencrypt.acme]
    email = "'"${letsencrypt_email}"'"
    storage = "acme.json"
    [certificatesResolvers.letsencrypt.acme.httpChallenge]
      entryPoint = "web"

[log]
  level = "INFO"

[accessLog]

[providers.docker]

[[tls.certificates]]
  certFile = "/etc/letsencrypt/live/'"${domain_name}"'/fullchain.pem"
  keyFile = "/etc/letsencrypt/live/'"${domain_name}"'/privkey.pem"


EOF'

sudo -u ${sudo_username} -H sh -c "touch /home/${sudo_username}/guac-server/acme.json"
sudo -u ${sudo_username} -H sh -c "chmod 600 /home/${sudo_username}/guac-server/acme.json"

# Start Traefik and other services
sudo -u ${sudo_username} -H sh -c "docker-compose up -d"

# Install Fish shell
sudo -u ${sudo_username} -H sh -c "sudo apt install -y fish"

# Set Fish as the default shell for the current user
sudo -u ${sudo_username} -H sh -c "chsh -s /usr/bin/fish"