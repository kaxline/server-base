services:
  traefik:
    image: traefik:3.0.4
    env_file:
      - .env
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.http.routers.api.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web"

  guacd:
    container_name: guacd
    image: guacamole/guacd
    env_file:
      - .env
    networks:
      guac-net:
    restart: always
    volumes:
      - ./drive:/drive:rw
      - ./record:/record:rw

  guacamole:
    container_name: guacamole
    image: guacamole/guacamole
    env_file:
      - .env
    depends_on:
      - guacd
      - postgres
    links:
      - guacd
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guacamole.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.guacamole.entrypoints=web"
      - "traefik.http.routers.guacamole.entrypoints=websecure"
      - "traefik.http.routers.guacamole.tls.certresolver=letsencrypt"
      - "traefik.docker.network=web"
    networks:
      guac-net:
      web:
    ports:
      - 8080/tcp
    restart: always

  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    env_file:
      - .env
    networks:
      guac-net:
    restart: always
    volumes:
      - ./init:/docker-entrypoint-initdb.d:z
      - ./data:/var/lib/postgresql/data:Z


networks:
  guac-net:
    driver: bridge
  web:
    driver: bridge